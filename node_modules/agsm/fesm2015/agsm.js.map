{"version":3,"file":"agsm.js","sources":["../../../projects/agsm/src/lib/agsm.service.ts","../../../projects/agsm/src/public-api.ts","../../../projects/agsm/src/agsm.ts"],"sourcesContent":["/// <reference types=\"chrome\"/>\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Action } from '../models/action.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AgsmService {\n  private store: any = {};\n  private id: number = 0;\n  private devToolsId = () =>\n    `agsm${\n      Date.now().toString(36) + Math.random().toString(36).substr(2)\n    }-dispatch${this.id++}`;\n  private devToolsLink: boolean = false;\n  /* For future use */\n  private stateMap: any = {};\n  private actionMap: any = {};\n  private _store = new BehaviorSubject<any>({});\n\n  constructor() {}\n\n  /**\n   * Adds a new reducer to the store\n   * @param  {string} reducerName\n   * @param  {(action:Action,initialState?:any)=>{}} reducerFunc\n   * @returns void\n   */\n  addReducer(\n    reducerName: string,\n    reducerFunc: (action: Action, initialState?: any) => {}\n  ): void {\n    if (this.store[reducerName]) {\n      throw new Error('Cannot have duplicate reducer names in store.');\n    }\n\n    const initialState = reducerFunc({ type: 'AGSM_INIT', payload: {} });\n    if (typeof initialState !== 'object') {\n      throw new Error('Initial state must be an object');\n    }\n\n    this.store[reducerName] = {\n      dispatcher: reducerFunc,\n      state: initialState,\n      reducer: new BehaviorSubject<any>(initialState),\n    };\n  }\n\n  /**\n   * Dispatches actions to the store for reducers to change the state accordingly\n   * @param  {string} actionType\n   * @param  {any} payload?\n   * @returns void\n   */\n  dispatch(actionType: string, payload?: any): void {\n    const action: Action = {\n      type: actionType,\n      payload: payload ?? {},\n    };\n\n    if (this.devToolsLink && Object.keys(action.payload).length <= 0) {\n      try {\n        chrome.runtime.sendMessage('ejpcjcmhahncbieoipffmamnedfhghld', {\n          type: 'agsm_event',\n          agsmEvent: actionType,\n          id: this.devToolsId(),\n          content: {},\n        });\n      } catch (e: any) {\n        throw new Error(\n          'Make sure AGSM Dev Tools extension is installed or pass a false boolean to linkDevTools() to de-activate debugging'\n        );\n      }\n    }\n\n    // Begin dispatching to all reducers & check for changes before broadcasting\n    for (const key of Object.keys(this.store)) {\n      const oldState = this.store[key].state; // For performance reasons\n      this.store[key].state = this.store[key].dispatcher(\n        action,\n        this.store[key].state\n      );\n\n      // Check for object equality so we don't broadcast all the time\n      let equals = true;\n      for (const _key of Object.keys(this.store[key].state)) {\n        if (_key in oldState && _key in this.store[key].state) {\n          if (oldState[_key] !== this.store[key].state[_key]) {\n            equals = false;\n            break;\n          }\n        } else {\n          equals = false;\n          break;\n        }\n      }\n\n      if (!equals) {\n        this.store[key].reducer.next(this.store[key].state);\n\n        if (this.devToolsLink) {\n          try {\n            chrome.runtime.sendMessage('ejpcjcmhahncbieoipffmamnedfhghld', {\n              type: 'agsm_event',\n              agsmEvent: actionType,\n              id: this.devToolsId(),\n              content:\n                Object.keys(this.store[key].state).length > 0\n                  ? { state: this.store[key].state }\n                  : {},\n            });\n          } catch (e: any) {\n            throw new Error(\n              'Make sure AGSM Dev Tools extension is installed or pass a false boolean to linkDevTools() to de-activate debugging'\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Selects a state from the store using a selector function (e.g. (state) => state.myState)\n   * @param  {(state:any)=>any} selector\n   * @returns Observable\n   */\n  stateSelector(selector: (state: any) => any): Observable<any> {\n    const selectedState = selector(this.store);\n    if (!selectedState)\n      throw new Error('Selected reducer does not exist in agsm store');\n\n    return selectedState.reducer.asObservable().pipe(\n      map((state: any) => {\n        return JSON.parse(JSON.stringify(state));\n      })\n    );\n  }\n\n  /**\n   * Sets the initial state of the store with a custom state\n   *\n   * NOTE: Any state attributes provided in the state object parameter should be identical to the reducer names that were set in addReducer()\n   *\n   * addReducer has to be used to initialise the reducers before using this function\n   * @param  {any} state\n   * @returns void\n   */\n  setStoreInitialState(state: any): void {\n    if (Object.keys(state).length <= 0) return;\n\n    for (const key of Object.keys(state)) {\n      if (!(key in this.store)) {\n        throw new Error(\n          'Cannot set state for states outside of the store object'\n        );\n      }\n\n      const newReducerState = state[key];\n      if (typeof newReducerState !== 'object') {\n        throw new Error('Initial states must be objects');\n      }\n\n      this.store[key].state = newReducerState;\n      this.store[key].reducer.next(this.store[key].state);\n    }\n  }\n\n  /**\n   * Links AGSM to the AGSM Dev Tools extension to debug application's state\n   * @param  {boolean} activate\n   * @returns void\n   */\n  linkDevTools(activate: boolean): void {\n    this.devToolsLink = activate;\n  }\n\n  /* DEPRECATED */\n\n  //   setReducerState(\n  //     selector: (state: any) => any,\n  //     state: any,\n  //     update: boolean\n  //   ): void {\n  //     const currState = selector(this.store);\n  //     if (!currState) {\n  //       throw new Error('Reducer not found in store');\n  //     }\n  //     currState.state = state;\n  //     if (update) {\n  //       currState.reducer.next(state);\n  //     }\n  //   }\n\n  //   getStateValue(selector: (state: any) => any): void {\n  //     const currState = selector(this.store);\n  //     currState.reducer.next(currState.state);\n  //   }\n}\n","/*\n * Public API Surface of agsm\n */\n\nexport * from './lib/agsm.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}